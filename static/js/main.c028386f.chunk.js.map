{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/navigation/AuthNav.js","components/navigation/Navigation.js","components/userMenu/UserMenuStyled.js","components/userMenu/UserMenu.js","components/navigation/AppBarStyled.js","components/navigation/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["fetchRequest","createAction","fetchSuccess","fetchError","addRequest","addSuccess","addError","deleteRequest","deleteSuccess","deleteError","handleChange","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","authActions","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","_","payload","isAuthenticated","token","setError","error","authReducer","combineReducers","axios","defaults","baseURL","headers","common","Authorization","authOperations","register","credentials","dispatch","a","post","response","data","message","logIn","logOut","getCurrentUser","getState","persistedToken","auth","get","authSelectors","getIsAuthenticated","state","getUserName","getUserEmail","AuthNav","className","to","exact","activeClassName","Navigation","useSelector","UserMenuContainer","styled","div","UserMenu","userName","userEmail","useDispatch","onLogout","useCallback","type","onClick","HeaderContainer","header","AppBar","PrivateRoute","Component","component","redirectTo","routeProps","children","render","props","PublicRoute","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","contacts","filter","id","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","Store","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c028386f.chunk.js","sourcesContent":["import {createAction} from '@reduxjs/toolkit';\r\n\r\nexport const fetchRequest = createAction('contacts/fetchRequest');\r\nexport const fetchSuccess = createAction('contacts/fetchSuccess');\r\nexport const fetchError = createAction('contacts/fetchError');\r\n\r\nexport const addRequest = createAction('contacts/addRequest');\r\nexport const addSuccess = createAction('contacts/addSuccess');\r\nexport const addError = createAction('contacts/addError');\r\n\r\nexport const deleteRequest = createAction('contacts/deleteRequest');\r\nexport const deleteSuccess = createAction('contacts/deleteSuccess');\r\nexport const deleteError = createAction('contacts/deleteError');\r\n\r\nexport const deleteContact = createAction('contacts/Delete');\r\n\r\nexport const handleChange = createAction('filter/handleChange');\r\n","import {createAction} from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nconst authActions = {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError\r\n};\r\n\r\nexport {authActions};\r\n\r\n/*\r\nexport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError\r\n};\r\n*/\r\n","import {combineReducers, createReducer} from '@reduxjs/toolkit';\r\nimport {authActions} from './auth-actions';\r\n\r\nconst initialUserState = {name: null, email: null};\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, {payload}) => payload.user,\r\n  [authActions.loginSuccess]: (_, {payload}) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, {payload}) => payload\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, {payload}) => payload.token,\r\n  [authActions.loginSuccess]: (_, {payload}) => payload.token,\r\n  [authActions.logoutSuccess]: () => null\r\n});\r\n\r\nconst setError = (_, {payload}) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError\r\n});\r\n\r\nexport const authReducer = combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error\r\n});\r\n","import axios from 'axios';\r\nimport {authActions} from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  }\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n    // console.log(response.data);\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: {token: persistedToken}\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport const authOperations = {register, logIn, logOut, getCurrentUser};\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\nconst getUserEmail = state => state.auth.user.email;\r\n\r\nexport const authSelectors = {getIsAuthenticated, getUserName, getUserEmail};\r\n","import {NavLink} from 'react-router-dom';\r\n\r\nexport const AuthNav = () => (\r\n  <nav className=\"navLinks\">\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      className=\"navLink\"\r\n      activeClassName=\"navLinkActive\"\r\n    >\r\n      Sign up\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      className=\"navLink\"\r\n      activeClassName=\"navLinkActive\"\r\n    >\r\n      Sign in\r\n    </NavLink>\r\n  </nav>\r\n);\r\nexport default AuthNav;\r\n","import {useSelector} from 'react-redux';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {authSelectors} from '../../redux/auth';\r\n\r\nexport default function Navigation() {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <nav className=\"navLinks\">\r\n      <NavLink to=\"/\" exact className=\"navLink\" activeClassName=\"navLinkActive\">\r\n        Home\r\n      </NavLink>\r\n\r\n      {isAuthenticated && (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          exact\r\n          className=\"navLink\"\r\n          activeClassName=\"navLinkActive\"\r\n        >\r\n          Contacts\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nexport const UserMenuContainer = styled.div`\r\n  .userMenuRext {\r\n    color: #3f51b5;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n","import {useCallback} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {authSelectors, authOperations} from '../../redux/auth';\r\nimport {UserMenuContainer} from './UserMenuStyled';\r\n\r\nexport default function UserMenu() {\r\n  const userName = useSelector(authSelectors.getUserName);\r\n  const userEmail = useSelector(authSelectors.getUserEmail);\r\n\r\n  const dispatch = useDispatch();\r\n  const onLogout = useCallback(\r\n    () => dispatch(authOperations.logOut()),\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <UserMenuContainer>\r\n      <p className=\"userMenuRext\">\r\n        Welcome, <b>{userName}</b>\r\n      </p>\r\n      <p className=\"userMenuRext\">\r\n        Email: <b>{userEmail}</b>\r\n      </p>\r\n      <button type=\"button\" className=\"navLink\" onClick={onLogout}>\r\n        Sign off\r\n      </button>\r\n    </UserMenuContainer>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nexport const HeaderContainer = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-radius: 5px;\r\n  padding: 20px 50px;\r\n  max-width: 100%;\r\n  min-height: 120px;\r\n  align-items: center;\r\n  color: #fff;\r\n  background-color: rgb(232, 240, 254);\r\n  margin: 0 auto;\r\n  border: 1px solid rgba(0, 0, 0, 0.23);\r\n\r\n  /* box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000; */\r\n\r\n  .navLink {\r\n    display: inline-block;\r\n    text-align: center;\r\n    padding: 5px 20px;\r\n    min-width: 150px;\r\n    background-color: #3f51b5;\r\n    color: #ffffff;\r\n    box-shadow: 0px 3px 1px -2px rgb(0 0 0 / 20%),\r\n      0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%);\r\n    text-decoration: none;\r\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\r\n      box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\r\n      border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\r\n    font-weight: 500;\r\n    line-height: 1.75;\r\n    border-radius: 4px;\r\n    letter-spacing: 0.02857em;\r\n    text-transform: uppercase;\r\n    cursor: pointer;\r\n    border: none;\r\n  }\r\n  .navLink:hover {\r\n    background-image: linear-gradient(to bottom, #3f51b5, #070c73);\r\n    text-decoration: none;\r\n  }\r\n  .navLinkActive {\r\n    display: inline-block;\r\n    text-align: center;\r\n    padding: 5px 20px;\r\n    min-width: 150px;\r\n    background-image: linear-gradient(to bottom, #3f51b5, #070c73);\r\n    text-decoration: none;\r\n    border-radius: 4px;\r\n    color: #ffffff;\r\n    box-shadow: 0px 3px 1px -2px rgb(0 0 0 / 20%),\r\n      0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%);\r\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\r\n      box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\r\n      border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n  }\r\n\r\n  .navLinks {\r\n    display: flex;\r\n    gap: 20px;\r\n  }\r\n`;\r\n","import AuthNav from './AuthNav';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from '../userMenu/UserMenu';\r\nimport {useSelector} from 'react-redux';\r\nimport {authSelectors} from '../../redux/auth';\r\nimport {HeaderContainer} from './AppBarStyled';\r\n\r\nexport default function AppBar() {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <HeaderContainer>\r\n      <Navigation />\r\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </HeaderContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\nimport {authSelectors} from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nexport default function PrivateRoute({\r\n  component: Component,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={redirectTo} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\nimport {authSelectors} from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nexport default function PublicRoute({\r\n  component: Component,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isAuthenticated && routeProps.restricted ? (\r\n          <Redirect to={redirectTo} />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import {Route, Switch} from 'react-router';\nimport AppBar from './components/navigation/AppBar';\nimport {lazy, useEffect} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {authOperations} from './redux/auth';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport {Suspense} from 'react';\n\nconst HomeView = lazy(() => import('./views/homeView/HomeView'));\nconst RegisterView = lazy(() => import('./views/registerView/RegisterView'));\nconst LoginView = lazy(() => import('./views/loginView/LoginView'));\nconst ContactsView = lazy(() => import('./views/contactsView/ContactsView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <AppBar />\n      <Suspense fallback={<p>Loading...</p>}>\n        <Switch>\n          <Route exact path=\"/\" component={HomeView} />\n          <PublicRoute\n            path=\"/register\"\n            restricted\n            redirectTo=\"/contacts\"\n            component={RegisterView}\n          />\n          <PublicRoute\n            path=\"/login\"\n            restricted\n            redirectTo=\"/contacts\"\n            component={LoginView}\n          />\n          <PrivateRoute\n            path=\"/contacts\"\n            redirectTo=\"/login\"\n            component={ContactsView}\n          />\n        </Switch>\n      </Suspense>\n    </div>\n  );\n}\n","import {combineReducers, createReducer} from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  fetchRequest,\r\n  fetchSuccess,\r\n  fetchError,\r\n  addRequest,\r\n  addSuccess,\r\n  addError,\r\n  deleteRequest,\r\n  deleteSuccess,\r\n  deleteError,\r\n  handleChange\r\n} from './contacts-actions';\r\n\r\nconst initialState = [];\r\n\r\nconst contacts = createReducer(initialState, {\r\n  [fetchSuccess]: (_, {payload}) => payload,\r\n  [addSuccess]: (state, {payload}) => [...state, payload],\r\n  [deleteSuccess]: (state, {payload}) => state.filter(({id}) => id !== payload)\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchRequest]: () => true,\r\n  [fetchSuccess]: () => false,\r\n  [fetchError]: () => false,\r\n\r\n  [addRequest]: () => true,\r\n  [addSuccess]: () => false,\r\n  [addError]: () => false,\r\n\r\n  [deleteRequest]: () => true,\r\n  [deleteSuccess]: () => false,\r\n  [deleteError]: () => false\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [handleChange]: (state, {payload}) => {\r\n    return payload;\r\n  }\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading\r\n});\r\n","import {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nimport {authReducer} from './auth';\r\nimport contactsReducer from '../redux/contacts/contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n    }\r\n  }),\r\n  logger\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token']\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development'\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport const Store = {store, persistor};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {Store} from './redux/store';\nimport {BrowserRouter} from 'react-router-dom';\nimport {PersistGate} from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store.store}>\n      <PersistGate loading={null} persistor={Store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}