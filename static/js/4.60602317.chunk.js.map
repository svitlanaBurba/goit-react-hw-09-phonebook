{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/homeView/HomeViewStyled.js","../node_modules/uuid/dist/esm-browser/rng.js","components/contactForm/ContactFormStyled.js","components/filter/Filter.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/contactListItem/ContactListItemStyled.js","components/contactListItem/ContactListItem.js","redux/contacts/contacts-selectors.js","components/contactList/ContactList.js","redux/contacts/contacts-operations.js","components/contactForm/ContactForm.js","views/contactsView/ContactsViewStyled.js","views/contactsView/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","HomeViewContainer","styled","div","getRandomValues","ContactFormContainer","form","InputContainer","input","LabelContainer","label","ButtonContainer","button","Filter","dispatch","useDispatch","onChange","useCallback","event","handleChange","target","htmlFor","id","type","name","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","toString","substr","stringify","offset","arguments","toLowerCase","v4","options","buf","rnds","random","ContactListItemContainer","li","ContactListItem","number","deleteContact","className","onClick","getLoading","state","contacts","loading","getContacts","getFilteredContacts","createSelector","filter","allContacts","contact","includes","trim","ContactList","useSelector","isLoadingContacts","onDeleteContact","deleteRequest","axios","delete","then","deleteSuccess","catch","error","deleteError","message","useEffect","a","fetchRequest","get","data","fetchSuccess","fetchError","map","ContactForm","useState","setName","setNumber","addNew","inputData","addRequest","post","addSuccess","addError","onSubmit","preventDefault","some","alert","pattern","title","required","ContactsViewContainer","ContactsView"],"mappings":"0JAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,iFIJzFC,E,MAAoBC,EAAOC,IAAV,sI,oDCE1BC,E,8BCFSC,EAAuBH,IAAOI,KAAV,qNAUpBC,EAAiBL,IAAOM,MAAV,8OAadC,EAAiBP,IAAOQ,MAAV,0FAMdC,EAAkBT,IAAOU,OAAV,q0B,eCxBb,SAASC,IACtB,IAAMC,EAAWC,cACXC,EAAWC,uBACf,SAAAC,GAAK,OAAIJ,EAASK,YAAaD,EAAME,OAAOxB,UAC5C,CAACkB,IAGH,OACE,qCACE,cAACL,EAAD,CAAgBY,QAAQ,SAAxB,mCACA,cAACd,EAAD,CACEe,GAAG,SACHC,KAAK,OACLP,SAAUA,EACVQ,KAAK,cFhBb,IAAIC,EAAQ,IAAIC,WAAW,IACZ,SAASC,IAEtB,IAAKvB,KAGHA,EAAoC,qBAAXwB,QAA0BA,OAAOxB,iBAAmBwB,OAAOxB,gBAAgByB,KAAKD,SAA+B,qBAAbE,UAAgE,oBAA7BA,SAAS1B,iBAAkC0B,SAAS1B,gBAAgByB,KAAKC,WAGrO,MAAM,IAAIC,MAAM,4GAIpB,OAAO3B,EAAgBqB,GGjBV,4HCQf,ICFeO,MAJf,SAAkBC,GAChB,MAAuB,kBAATA,GAAqBC,EAAMC,KAAKF,IDG5CG,EAAY,GAEPxD,EAAI,EAAGA,EAAI,MAAOA,EACzBwD,EAAUzC,MAAMf,EAAI,KAAOyD,SAAS,IAAIC,OAAO,IAoBlCC,MAjBf,SAAmB5D,GACjB,IAAI6D,EAASC,UAAU5C,OAAS,QAAsBP,IAAjBmD,UAAU,GAAmBA,UAAU,GAAK,EAG7ER,GAAQG,EAAUzD,EAAI6D,EAAS,IAAMJ,EAAUzD,EAAI6D,EAAS,IAAMJ,EAAUzD,EAAI6D,EAAS,IAAMJ,EAAUzD,EAAI6D,EAAS,IAAM,IAAMJ,EAAUzD,EAAI6D,EAAS,IAAMJ,EAAUzD,EAAI6D,EAAS,IAAM,IAAMJ,EAAUzD,EAAI6D,EAAS,IAAMJ,EAAUzD,EAAI6D,EAAS,IAAM,IAAMJ,EAAUzD,EAAI6D,EAAS,IAAMJ,EAAUzD,EAAI6D,EAAS,IAAM,IAAMJ,EAAUzD,EAAI6D,EAAS,KAAOJ,EAAUzD,EAAI6D,EAAS,KAAOJ,EAAUzD,EAAI6D,EAAS,KAAOJ,EAAUzD,EAAI6D,EAAS,KAAOJ,EAAUzD,EAAI6D,EAAS,KAAOJ,EAAUzD,EAAI6D,EAAS,MAAME,cAMzf,IAAKV,EAASC,GACZ,MAAMjC,UAAU,+BAGlB,OAAOiC,GEHMU,I,EAAAA,EApBf,SAAYC,EAASC,EAAKL,GAExB,IAAIM,GADJF,EAAUA,GAAW,IACFG,SAAWH,EAAQjB,KAAOA,KAK7C,GAHAmB,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBD,EAAK,CACPL,EAASA,GAAU,EAEnB,IAAK,IAAI5D,EAAI,EAAGA,EAAI,KAAMA,EACxBiE,EAAIL,EAAS5D,GAAKkE,EAAKlE,GAGzB,OAAOiE,EAGT,OAAON,EAAUO,IClBNE,EAA2B9C,IAAO+C,GAAV,8JCuBtBC,EAnBS,SAAC,GAAmC,IAAlC1B,EAAiC,EAAjCA,KAAM2B,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,cACtC,OACE,eAACJ,EAAD,WACE,oBAAGK,UAAU,sBAAb,UACG7B,EADH,KACW2B,KAEX,cAACxC,EAAD,CAAiBY,KAAK,SAAS+B,QAASF,EAAxC,wB,kDCVOG,EAAa,SAAAC,GAAK,OAAIA,EAAMC,SAASC,SACrCC,EAAc,SAAAH,GAAK,OAAIA,EAAMC,SAASA,UActCG,EAAsBC,YACjC,CAACF,EAdsB,SAAAH,GAAK,OAAIA,EAAMC,SAASK,UAe/C,SAACC,EAAaD,GACZ,OAAOC,EAAYD,QAAO,SAAAE,GAAO,OAC/BA,EAAQxC,KAAKkB,cAAcuB,SAASH,EAAOpB,cAAcwB,cCRhD,SAASC,IACtB,IAAMV,EAAWW,YAAYR,GACvBS,EAAoBD,YAAYb,GAEhCzC,EAAWC,cACXuD,EAAkB,SAAAhD,GAAE,OAAIR,ECeH,SAAAQ,GAAE,OAAI,SAAAR,GACjCA,EAASyD,eACTC,IACGC,OADH,oBACuBnD,IACpBoD,MAAK,kBAAM5D,EAAS6D,YAAcrD,OAClCsD,OAAM,SAAAC,GAAK,OAAI/D,EAASgE,YAAYD,EAAME,cDpBN3B,CAAc9B,KAMrD,OAJA0D,qBAAU,WACRlE,ECNyB,uCAAM,WAAMA,GAAN,iBAAAmE,EAAA,6DACjCnE,EAASoE,eADwB,kBAGVV,IAAMW,IAAI,aAHA,gBAGxBC,EAHwB,EAGxBA,KACPtE,EAASuE,YAAaD,IAJS,gDAM/BtE,EAASwE,YAAW,KAAMP,UANK,yDAAN,yDDOxB,CAACjE,IAGF,+BACGuD,GAAqB,4CACrBZ,EAAS8B,KAAI,SAAAvB,GAAO,OACnB,cAAC,EAAD,CACExC,KAAMwC,EAAQxC,KACd2B,OAAQa,EAAQb,OAEhBC,cAAe,kBAAMkB,EAAgBN,EAAQ1C,MADxCW,W,eEnBA,SAASuD,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOjE,EAAP,KAAakE,EAAb,KAKA,EAA4BD,mBAAS,IAArC,mBAAOtC,EAAP,KAAewC,EAAf,KAKMlC,EAAWW,YAAYT,GAEvB7C,EAAWC,cAEX6E,EAAS,SAAA5B,GAAO,OAAIlD,GDFC+E,ECEsB7B,EDFT,SAAAlD,GACxCA,EAASgF,eACTtB,IACGuB,KAAK,YAAaF,GAClBnB,MAAK,gBAAEU,EAAF,EAAEA,KAAF,OAAYtE,EAASkF,YAAWZ,OACrCR,OAAM,SAAAC,GAAK,OAAI/D,EAASmF,YAASpB,EAAME,gBALf,IAAAc,GCqB3B,OACE,eAACxF,EAAD,CAAsB6F,SAlBH,SAAAhF,GACnBA,EAAMiF,iBAEF1C,EAAS2C,MAAK,SAAApC,GAAO,OAAIA,EAAQxC,OAASA,KAC5C6E,MAAM,GAAD,OAAI7E,EAAJ,8BAIPoE,EAAO,CACLpE,OACA2B,WAGFuC,EAAQ,IACRC,EAAU,MAIV,UACE,cAAClF,EAAD,CAAgBY,QAAQ,OAAxB,kBACA,cAACd,EAAD,CACEgB,KAAK,OACLD,GAAG,OACHE,KAAK,OACL8E,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRxF,SA1CmB,SAAAE,GACvBwE,EAAQxE,EAAME,OAAOxB,QA0CjBA,MAAO4B,IAET,cAACf,EAAD,CAAgBY,QAAQ,SAAxB,oBACA,cAACd,EAAD,CACEgB,KAAK,MACLD,GAAG,SACHE,KAAK,SACL8E,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRxF,SAhDqB,SAAAE,GACzByE,EAAUzE,EAAME,OAAOxB,QAgDnBA,MAAOuD,IAET,cAACxC,EAAD,CAAiBY,KAAK,SAAtB,4BCrEC,IAAMkF,EAAwBvG,IAAOC,IAAV,gH,SCkBnBuG,UAbM,kBACnB,eAACD,EAAD,WACE,cAAC,IAAD,UACE,6CAEF,cAACjB,EAAD,IAEA,0CACA,cAAC3E,EAAD,IACA,cAACsD,EAAD","file":"static/js/4.60602317.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from 'styled-components';\r\nexport const HomeViewContainer = styled.div`\r\n  padding: 4vw 2vw 0;\r\n  font-size: 2vw;\r\n  color: #3f51b5;\r\n  text-align: center;\r\n  font-weight: 700;\r\n`;\r\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import styled from 'styled-components';\r\nexport const ContactFormContainer = styled.form`\r\n  width: 50vw;\r\n  padding: 16px;\r\n  border: 1px solid rgba(0, 0, 0, 0.23);\r\n  border-radius: 4px;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n  background-color: rgb(232, 240, 254);\r\n`;\r\n\r\nexport const InputContainer = styled.input`\r\n  display: block;\r\n  min-width: 300px;\r\n  padding: 5px 10px;\r\n  margin-bottom: 15px;\r\n  border: 1px solid lightgrey;\r\n  border-radius: 4px;\r\n  :focus {\r\n    outline: none;\r\n    border: 2px solid #3f51b5;\r\n  }\r\n`;\r\n\r\nexport const LabelContainer = styled.label`\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const ButtonContainer = styled.button`\r\n  display: inline-block;\r\n  text-align: center;\r\n  padding: 5px 20px;\r\n  min-width: 150px;\r\n  background-color: #3f51b5;\r\n  color: #ffffff;\r\n  box-shadow: 0px 3px 1px -2px rgb(0 0 0 / 20%),\r\n    0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%);\r\n  text-decoration: none;\r\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\r\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\r\n    border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n  font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\r\n  font-weight: 500;\r\n  line-height: 1.75;\r\n  border-radius: 4px;\r\n  letter-spacing: 0.02857em;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  border: none;\r\n\r\n  :hover {\r\n    background-image: linear-gradient(to bottom, #3f51b5, #070c73);\r\n    text-decoration: none;\r\n  }\r\n`;\r\n","import {useCallback} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport {InputContainer, LabelContainer} from '../contactForm/ContactFormStyled';\r\nimport {handleChange} from '../../redux/contacts/contacts-actions';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const onChange = useCallback(\r\n    event => dispatch(handleChange(event.target.value)),\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <LabelContainer htmlFor=\"filter\">Find contacts by name</LabelContainer>\r\n      <InputContainer\r\n        id=\"filter\"\r\n        type=\"text\"\r\n        onChange={onChange}\r\n        name=\"filter\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import styled from 'styled-components';\r\n\r\nexport const ContactListItemContainer = styled.li`\r\n  margin-bottom: 10px;\r\n  .contactListItemText {\r\n    display: inline-block;\r\n    margin-right: 10px;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {ButtonContainer} from '../contactForm/ContactFormStyled';\r\nimport {ContactListItemContainer} from './ContactListItemStyled';\r\n\r\nconst ContactListItem = ({name, number, deleteContact}) => {\r\n  return (\r\n    <ContactListItemContainer>\r\n      <p className=\"contactListItemText\">\r\n        {name}: {number}\r\n      </p>\r\n      <ButtonContainer type=\"button\" onClick={deleteContact}>\r\n        Delete\r\n      </ButtonContainer>\r\n    </ContactListItemContainer>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  deleteContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ContactListItem;\r\n","import {createSelector} from 'reselect';\r\n\r\nexport const getLoading = state => state.contacts.loading;\r\nexport const getContacts = state => state.contacts.contacts;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\n//Селектор до использования мемоизации (оставлено для примера)\r\n// export const getFilteredContacts = state => {\r\n//   console.log('Перерендер интерфейса');\r\n//   const allContacts = getContacts(state);\r\n//   const filter = getFilter(state);\r\n\r\n//   return allContacts.filter(contact =>\r\n//     contact.name.toLowerCase().includes(filter.toLowerCase().trim())\r\n//   );\r\n// };\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (allContacts, filter) => {\r\n    return allContacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\r\n    );\r\n  }\r\n);\r\n","import React, {useEffect} from 'react';\r\nimport {v4 as uuid} from 'uuid';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\nimport ContactListItem from '../contactListItem/ContactListItem';\r\n\r\nimport {\r\n  deleteContact,\r\n  fetchContacts,\r\n  getFilteredContacts,\r\n  getLoading\r\n} from '../../redux/contacts';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getFilteredContacts);\r\n  const isLoadingContacts = useSelector(getLoading);\r\n\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul>\r\n      {isLoadingContacts && <h2>Loading...</h2>}\r\n      {contacts.map(contact => (\r\n        <ContactListItem\r\n          name={contact.name}\r\n          number={contact.number}\r\n          key={uuid()}\r\n          deleteContact={() => onDeleteContact(contact.id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport {\r\n  fetchRequest,\r\n  fetchSuccess,\r\n  fetchError,\r\n  addRequest,\r\n  addSuccess,\r\n  addError,\r\n  deleteRequest,\r\n  deleteSuccess,\r\n  deleteError\r\n} from './contacts-actions';\r\n\r\n// axios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchRequest());\r\n  try {\r\n    const {data} = await axios.get('/contacts');\r\n    dispatch(fetchSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchError(error.message));\r\n  }\r\n};\r\n\r\nexport const addNewContact = inputData => dispatch => {\r\n  dispatch(addRequest());\r\n  axios\r\n    .post('/contacts', inputData)\r\n    .then(({data}) => dispatch(addSuccess(data)))\r\n    .catch(error => dispatch(addError(error.message)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteSuccess(id)))\r\n    .catch(error => dispatch(deleteError(error.message)));\r\n};\r\n\r\n//export default {addNewContact, deleteContact};\r\n","import React, {useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\nimport {\r\n  ButtonContainer,\r\n  ContactFormContainer,\r\n  InputContainer,\r\n  LabelContainer\r\n} from './ContactFormStyled';\r\n\r\nimport {addNewContact, getContacts} from '../../redux/contacts';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const handleNameChange = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const [number, setNumber] = useState('');\r\n  const handleNumberChange = event => {\r\n    setNumber(event.target.value);\r\n  };\r\n\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const addNew = contact => dispatch(addNewContact(contact));\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      alert(`${name} is already in contacts.`);\r\n      return;\r\n    }\r\n\r\n    addNew({\r\n      name,\r\n      number\r\n    });\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <ContactFormContainer onSubmit={handleSubmit}>\r\n      <LabelContainer htmlFor=\"name\">Name</LabelContainer>\r\n      <InputContainer\r\n        type=\"text\"\r\n        id=\"name\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        onChange={handleNameChange}\r\n        value={name}\r\n      />\r\n      <LabelContainer htmlFor=\"number\">Number</LabelContainer>\r\n      <InputContainer\r\n        type=\"tel\"\r\n        id=\"number\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        onChange={handleNumberChange}\r\n        value={number}\r\n      />\r\n      <ButtonContainer type=\"submit\">Add contact</ButtonContainer>\r\n    </ContactFormContainer>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nexport const ContactsViewContainer = styled.div`\r\n  h2 {\r\n    padding: 1vh 0 0.5vh;\r\n    color: #3f51b5;\r\n    font-weight: 700;\r\n  }\r\n`;\r\n","import Filter from '../../components/filter/Filter';\r\nimport ContactList from '../../components/contactList/ContactList';\r\nimport ContactForm from '../../components/contactForm/ContactForm';\r\nimport {ContactsViewContainer} from './ContactsViewStyled';\r\nimport {HomeViewContainer} from '../homeView/HomeViewStyled';\r\n\r\nconst ContactsView = () => (\r\n  <ContactsViewContainer>\r\n    <HomeViewContainer>\r\n      <h1>Phonebook</h1>\r\n    </HomeViewContainer>\r\n    <ContactForm />\r\n\r\n    <h2>Contacts</h2>\r\n    <Filter />\r\n    <ContactList />\r\n  </ContactsViewContainer>\r\n);\r\n\r\nexport default ContactsView;\r\n"],"sourceRoot":""}